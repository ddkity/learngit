安装完成了git之后，需要进行最后一步的设置：
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

1、初始化仓库
	git init
2、把文件添加到仓库
	git add
3、把文件提交到仓库
	git commit
4、查看仓库的当前状态
	git status
5、查看当前工作区和已经提交的有什么不同
	git diff
6、查看git的提交（commit）记录，如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数（git log --pretty=oneline）
	git log
7、版本回退方法：在git当中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。回退版本的命令是：git reset --hard
	回退上一个版本：git reset --hard HEAD^
	回退上上一个版本：git reset --hard HEAD^^
	回退上100个版本：git reset --hard HEAD~100
	回退到某个commit id的版本：git reset --hard d55a3a77
8、在使用git reset的命令中退回到了比较旧的版本了，现在又想回到比较新的版本，但是又不记得新的commit id怎么办？使用git reflog命令，这个命令用来记录每一次的commit信息，可以查看到commit id。找到id之后就可以使用：git reset --hard + [commit id]来回退到指定的版本了。

9、git撤销修改的方法：git checkout -- readme
	意思就是，把readme文件在工作区的修改全部撤销，这里有两种情况：
	一种是readme自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
	另一种是readme已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态（即是回到git add之前的状态，此时的readme已经修改过了，和上次的commit的内容还是不一样的，可以再次的add和commit）。
	总之，就是让这个文件回到最近一次git commit或git add时的状态。

	git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。

